kind: StorageClass
apiVersion: storage.k8s.io/v1 #microk8s
metadata:
  namespace: leaftix
  name: pgadmin-std
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
provisioner: microk8s-hostpath #microk8s

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pgadmin-pv
  labels:
    app: pgadmin
    type: local
spec:
  storageClassName: pgadmin-std
  capacity:
    storage: 1Gi
  persistentVolumeReclaimPolicy: Recycle
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/g/leaftix/bd"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pgadmin-pv-claim
  labels:
    app: pgadmin
spec:
  storageClassName: pgadmin-std
  capacity:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Pod
metadata:
 name: web
 namespace: leaftix
 labels:
  app: web
 spec:
  containers:
  - name: web
    image: dpage/pgadmin4:5.4
    imagePullPolicy: Always
    env:
    - name: PGADMIN_DEFAULT_EMAIL
      value: rondweb@gmail.com
    - name: PGADMIN_DEFAULT_PASSWORD
      value: "123456"
    ports:
    - name: web
      containerPort: 80
    volumeMounts:
    - name: pgadmin-pv
      mountPath: /var/lib/pgadmin           
 volumes:
  - name: pgadmin-pv
    persistentVolumeClaim:
      claimName: pgadmin-pv-claim

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: svc-pgadmin
#   namespace: leaftix
# spec:
#   type: NodePort
#   ports:
#   - port: 5002
#     targetPort: 80
#   selector:
#       app: web
