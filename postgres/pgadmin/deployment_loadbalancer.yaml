kind: StorageClass
#apiVersion: storage.k8s.io/v1 #minikube
apiVersion: storage.k8s.io/v1 #microk8s
metadata:
  namespace: leaftix
  name: pgadmin-std
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists

#provisioner: k8s.io/minikube-hostpath minikube
provisioner: microk8s-hostpath #microk8s

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pgadmin-pv
  labels:
    app: pgadmin
    type: local
spec:
  storageClassName: pgadmin-std
  capacity:
    storage: 1Gi
  persistentVolumeReclaimPolicy: Recycle
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/g/leaftix/bd"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pgadmin-pv-claim
  labels:
    app: pgadmin
spec:
  storageClassName: pgadmin-std
  capacity:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
 name: pgadmin-cfg
data:
 servers.json: |
   {
       "Servers": {
         "1": {
           "Name": "PostgreSQL DB",
           "Group": "Servers",
           "Port": 31518,
           "Username": "amazinguser",
           "Host": "",
           "SSLMode": "prefer",
           "MaintenanceDB": "awesomedb"
         }
       }
   }

---
apiVersion: v1
kind: Service
metadata:
 name: pgadmin-ldb-svc
spec:
 ports:
 - protocol: TCP
   port: 80
   targetPort: http
 selector:
   app: pgadmin-svc
 type: ClusterIP
 
---
apiVersion: v1
kind: Service
metadata:
 name: pgadmin-ldb
 labels:
  app: pgadmin-ldb
spec:
 type: NodePort
 ports:
 - port: 80
   name: web
 selector:
   app: pgadmin-svc
 
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: web
spec:
 serviceName: "pgadmin-svc"
 podManagementPolicy: Parallel
 replicas: 2
 updateStrategy:
   type: RollingUpdate
 selector:
   matchLabels:
     app: "pgadmin-svc"
 template:
   metadata:
     labels:
       app: pgadmin-svc
   spec:
     terminationGracePeriodSeconds: 10
     containers:
       - name: pgadmin-svc
         image: dpage/pgadmin4:5.4
         securityContext:
           runAsGroup: 1000           
         imagePullPolicy: Always
         env:
         - name: PGADMIN_DEFAULT_EMAIL
           value: rondweb@gmail.com
         - name: PGADMIN_DEFAULT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: pgadmin
               key: PGADMIN_PASSWORD
         ports:
         - name: web
           containerPort: 80
         volumeMounts:
         - name: pgadmin-cfg
           mountPath: /pgadmin4/servers.json
           subPath: servers.json
           readOnly: true
         - name: pgadmin-pv
           mountPath: /var/lib/pgadmin           
     
     volumes:
     - name: pgadmin-pv
       persistentVolumeClaim:
         claimName: pgadmin-pv-claim
     - name: pgadmin-cfg
       configMap:
         name: pgadmin-cfg
