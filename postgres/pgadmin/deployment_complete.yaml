# STORAGE CLASS FOR STORE
kind: StorageClass
apiVersion: storage.k8s.io/v1 #microk8s
metadata:
  namespace: leaftix
  name: pgadmin-std
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
provisioner: microk8s-hostpath #microk8s

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pgadmin-pv
  labels:
    app: pgadmin
    type: local
spec:
  storageClassName: pgadmin-std
  capacity:
    storage: 1Gi
  persistentVolumeReclaimPolicy: Recycle
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/g/leaftix/bd"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pgadmin-pv-claim
  labels:
    app: pgadmin
spec:
  storageClassName: pgadmin-std
  capacity:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# CONFIG MAP FOR CONFIGURATION
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: pgadmin-cfg
data:
 servers.json: |
   {
       "Servers": {
         "1": {
           "Name": "PostgreSQL DB",
           "Group": "Servers",
           "Port": 31518,
           "Username": "amazinguser",
           "Host": "",
           "SSLMode": "prefer",
           "MaintenanceDB": "awesomedb"
         }
       }
   }

# DEPLOYMENT 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  labels:
    app: pgadmin
spec:
  selector:
    matchLabels:
      octopusexport: OctopusExport
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pgadmin
        octopusexport: OctopusExport
    spec:
      volumes:
        - name: pgadmin-pv
          persistentVolumeClaim:
            claimName: pgadmin-pv-claim
        - name: pgadmin-cfg
          configMap:
            name: pgadmin-cfg
      containers:
        - name: pgadmin
          image: 'dpage/pgadmin4:5.4'
          imagePullPolicy: Always
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: PGADMIN_DEFAULT_PASSWORD
              value: '123456'
            - name: PGADMIN_DEFAULT_EMAIL
              value: rondweb@gmail.com
          volumeMounts:
            - name: pgadmin-cfg
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
              readOnly: true          
            - name: pgadmin-pv
              mountPath: '"/g/leaftix/bd"'
          securityContext:
            readOnlyRootFilesystem: false
            runAsGroup: 1000
